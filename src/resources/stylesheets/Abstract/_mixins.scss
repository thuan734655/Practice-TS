@use './functions';
@use './variables' as *;

@mixin set-size($w: false, $h: false) {
    @if $w !=false {
        width: $w;
    }

    @if $h !=false {
        height: $h;
    }
}

@mixin grid($grid-tplt-row: false, $grid-tplt-column: false, $justify-content: false, $align-items: false, $grid-gap: false, $column-gap: false) {
    display: grid;

    @if $grid-tplt-row !=false {
        grid-template-rows: $grid-tplt-row;
    }

    @if $grid-tplt-column !=false {
        grid-template-columns: $grid-tplt-column;
    }

    @if $justify-content !=false {
        justify-content: $justify-content;
    }

    @if $align-items !=false {
        align-items: $align-items;
    }

    @if $grid-gap !=false {
        grid-gap: $grid-gap;
    }

    @if $column-gap !=falase {
        column-gap: $column-gap;
    }
}

@mixin font($font-family: false, $font-size: false, $font-weight: false, $font-style: false, $line-height: false, $color: false) {
    @if ($font-family !=false) {
        font-family: $font-family;
    }

    @if $font-size {
        font-size: $font-size;
    }

    @if $font-weight {
        font-weight: $font-weight;
    }

    @if $font-style {
        font-style: $font-style;
    }

    @if $line-height {
        line-height: $line-height;
    }

    @if $color {
        color: $color;
    }
}

@mixin flex( $direction: false, $align: false, $justify: false, $wrap: false, $gap: false) {
    display: flex;

    @if $direction {
        flex-direction: $direction;
    }

    @if $align {
        align-items: $align;
    }

    @if $justify {
        justify-content: $justify;
    }

    @if $wrap {
        flex-wrap: $wrap;
    }

    @if $gap {
        gap: $gap;
    }
}

//reponsive
@mixin tablet {
    @media screen and (min-width:$mobile-medium-max) {
        @content;
    }
}

@mixin desktop {
    @media screen and (min-width: $tablet-max) {
        @content;
    }
}

// Flexbox mixins
@mixin flexbox($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Media queries mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == "small" {
    @media (max-width: 480px) { @content; }
  }
  @else if $breakpoint == "medium" {
    @media (max-width: 768px) { @content; }
  }
  @else if $breakpoint == "large" {
    @media (max-width: 1024px) { @content; }
  }
}

// Card styles mixin
@mixin card($padding: 1rem, $radius: 12px, $shadow: true) {
  background: #fff;
  border-radius: $radius;
  padding: $padding;
  @if $shadow {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
}

// Transition mixin
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property 0.3s ease, comma);
  }
  transition: $transitions;
}

// Grid layout mixin
@mixin grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Button mixin
@mixin button($bg-color: #f0f0f0, $text-color: #333, $hover-darken: 10%) {
  padding: 0.5rem 1.5rem;
  border: none;
  background: $bg-color;
  color: $text-color;
  border-radius: 25px;
  cursor: pointer;
  @include transition(background-color, transform);

  &:hover {
    background: darken($bg-color, $hover-darken);
    transform: translateY(-2px);
  }
}

// Text truncate mixin
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Loading animation mixin
@mixin loading-animation {
  @keyframes pulse {
    0% { opacity: 0.6; }
    50% { opacity: 1; }
    100% { opacity: 0.6; }
  }
  animation: pulse 1.5s infinite ease-in-out;
}

// Image aspect ratio mixin
@mixin aspect-ratio($width: 1, $height: 1) {
  position: relative;
  &:before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}
